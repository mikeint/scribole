.topBar { 
    display: flex;
    width: 100%;
    height: 50px;
    top: 0;
    background: #2e9fd3;
    border-bottom: 1px solid #2e2e2e;
    box-shadow: 0 0 5px 0px black;
    z-index: 10;
    .logo {
        background: url(../../images/icon.png);
        background-repeat: no-repeat;
        background-size: 180px;
        width: 210px;
        background-position: center;
    }
}


/* IMAGE CYCLER STYLES */
.imageCycler {
    width: 50px;
    display: flex;
    position: relative;
}
.fadeCycle {
    width: 40px;
}
// Number of items to cycle
$fadeCycle-items: 4;
// Duration of transition
$fadeCycle-transition: 2s;
// Delay between transitions
$fadeCycle-wait: 1s;

// Generate animation
//-------------------
$fadeCycle-length: $fadeCycle-transition + $fadeCycle-wait;
$fadeCycle-total: $fadeCycle-items * ($fadeCycle-transition + $fadeCycle-wait);

@keyframes fadeCycle {
  0% {
    opacity: 0;
    z-index: 2;
  }
  // Fade in after $fadeCycle-transition seconds
  #{percentage($fadeCycle-transition / $fadeCycle-total)} {
    opacity: 1;
  }
  // Finish next transition
  #{percentage(($fadeCycle-transition + $fadeCycle-length) / $fadeCycle-total)} {
    opacity: 1;
  }
  // Begin fade out after next transition finishes
  #{percentage(($fadeCycle-transition + $fadeCycle-length) / $fadeCycle-total) + 1%} {
    opacity: 0;
    z-index: 1;
  }
  100% {
    opacity: 0;
  }
}

// Do not include animation-delay so that it can be set separately for each item
%fadeCycle {
  animation-duration: $fadeCycle-total;
  animation-fill-mode: both;
  animation-iteration-count: infinite;
  animation-name: fadeCycle;
  animation-timing-function: ease-in;
  transition: opacity #{$fadeCycle-transition} ease-in;
}

// Apply animations to each item with staggered animation-delay
@for $i from 1 through $fadeCycle-items {
  .fadeCycle-#{$i} {
    @extend %fadeCycle;
    animation-delay: ($i - 1) * $fadeCycle-length;
  }
}
/* end IMAGE CYCLER STYLES */